{"version":3,"sources":["components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/FriendListItem/FriendListItem.js","components/TransactionHistory/TransactionHistory.js","components/App/App.js","index.js"],"names":["Container","styled","div","Description","Avatar","img","Name","Tag","Location","List","ul","ListItem","ListLabel","span","ListQuantity","Profile","user","name","tag","location","avatar","stats","followers","views","likes","src","alt","defaultProps","Title","h2","ListItemBlue","ListItemPurple","ListItemRed","ListItemGreen","ListPercentage","Statistics","title","label","percentage","FriendList","children","li","Status","props","isOnline","friends","map","frend","key","id","width","Table","table","THead","thead","TBody","tbody","TR","tr","TH","th","TD","td","TransactionHistory","items","item","type","amount","currency","Box","App","statisticalData","FriendListItem","transactions","ReactDOM","render","document","getElementById"],"mappings":"44JAIA,IAAMA,EAAYC,IAAOC,IAAV,KAUTC,EAAcF,IAAOC,IAAV,KAGXE,EAASH,IAAOI,IAAV,KAINC,EAAOL,IAAOC,IAAV,KAKJK,EAAMN,IAAOC,IAAV,KAIHM,EAAWP,IAAOC,IAAV,KAIRO,EAAOR,IAAOS,GAAV,KASJC,EAAWV,IAAOS,GAAV,KAYRE,EAAYX,IAAOY,KAAV,KAKTC,EAAeb,IAAOY,KAAV,KAMlB,SAASE,EAAT,GAA4B,IAATC,EAAQ,EAARA,KACTC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAC7BC,EAA4BD,EAA5BC,UAAWC,EAAiBF,EAAjBE,MAAOC,EAAUH,EAAVG,MAC1B,OACE,kBAACxB,EAAD,KACE,kBAACG,EAAD,KACE,kBAACC,EAAD,CAAQqB,IAAKL,EAAQM,IAAKT,IAC1B,kBAACX,EAAD,KAAOW,GACP,kBAACV,EAAD,KAAMW,GACN,kBAACV,EAAD,KAAWW,IAEb,kBAACV,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,kBACA,kBAACE,EAAD,KAAeQ,IAEjB,kBAACX,EAAD,KACE,kBAACC,EAAD,cACA,kBAACE,EAAD,KAAeS,IAEjB,kBAACZ,EAAD,KACE,kBAACC,EAAD,cACA,kBAACE,EAAD,KAAeU,MAQzBT,EAAQY,aAAe,CACrBR,SAAU,UACVC,OAAQ,WAiBKL,Q,w7CC/Gf,IAAMf,EAAYC,IAAOC,IAAV,KAUT0B,EAAQ3B,IAAO4B,GAAV,KAMLpB,EAAOR,IAAOS,GAAV,KAUJC,EAAWV,IAAOS,GAAV,KAMRoB,EAAe7B,YAAOU,EAAPV,CAAH,KAGZ8B,EAAiB9B,YAAOU,EAAPV,CAAH,KAGd+B,EAAc/B,YAAOU,EAAPV,CAAH,KAGXgC,EAAgBhC,YAAOU,EAAPV,CAAH,KAGbW,EAAYX,IAAOY,KAAV,KAMTqB,EAAiBjC,IAAOY,KAAV,KAIpB,SAASsB,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,MAAOf,EAAS,EAATA,MAC3B,OACE,kBAAC,EAAD,KACE,kBAACO,EAAD,KAAQQ,GAER,kBAAC,EAAD,KACE,kBAACN,EAAD,KACE,kBAAC,EAAD,KAAYT,EAAM,GAAGgB,OACrB,kBAACH,EAAD,KAAiBb,EAAM,GAAGiB,WAA1B,MAEF,kBAACP,EAAD,KACE,kBAAC,EAAD,KAAYV,EAAM,GAAGgB,OACrB,kBAACH,EAAD,KAAiBb,EAAM,GAAGiB,WAA1B,MAEF,kBAACN,EAAD,KACE,kBAAC,EAAD,KAAYX,EAAM,GAAGgB,OACrB,kBAACH,EAAD,KAAiBb,EAAM,GAAGiB,WAA1B,MAEF,kBAACL,EAAD,KACE,kBAAC,EAAD,KAAYZ,EAAM,GAAGgB,OACrB,kBAACH,EAAD,KAAiBb,EAAM,GAAGiB,WAA1B,QAOVH,EAAWR,aAAe,CACxBS,MAAO,SAcMD,Q,yRChGf,IAAM1B,GAAOR,IAAOS,GAAV,KAoBK6B,OARf,YAAmC,IAAbC,EAAY,EAAZA,SACpB,OAAO,kBAAC,GAAD,KAAOA,I,gjBCbhB,IAAM7B,GAAWV,IAAOwC,GAAV,MAURC,GAASzC,IAAOY,KAAV,MAIU,SAAA8B,GAAK,OAAKA,EAAMC,SAAW,QAAU,SAIrDxC,GAASH,IAAOI,IAAV,MAyBGkC,OArBf,YACE,OAD+B,EAAXM,QACLC,KAAI,SAAAC,GAAK,OACtB,kBAAC,GAAD,CAAUC,IAAKD,EAAME,IACnB,kBAACP,GAAD,CAAQE,SAAUG,EAAMH,WACxB,kBAAC,GAAD,CAAQnB,IAAKsB,EAAM3B,OAAQM,IAAKqB,EAAM9B,KAAMiC,MAAM,OAClD,2BAAIH,EAAM9B,W,85BC3BhB,IAAMkC,GAAQlD,IAAOmD,MAAV,MAULC,GAAQpD,IAAOqD,MAAV,MACLC,GAAQtD,IAAOuD,MAAV,MACLC,GAAKxD,IAAOyD,GAAV,MAMFC,GAAK1D,IAAO2D,GAAV,MAQFC,GAAK5D,IAAO6D,GAAV,MAyCOC,OAnCf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,kBAACb,GAAD,KACE,kBAACE,GAAD,KACE,kBAACI,GAAD,KACE,kBAACE,GAAD,aACA,kBAACA,GAAD,eACA,kBAACA,GAAD,mBAIJ,kBAACJ,GAAD,KACGS,EAAMlB,KAAI,SAAAmB,GAAI,OACb,kBAACR,GAAD,CAAIT,IAAKiB,EAAKhB,IACZ,kBAACY,GAAD,KAAKI,EAAKC,MACV,kBAACL,GAAD,KAAKI,EAAKE,QACV,kBAACN,GAAD,KAAKI,EAAKG,iB,oOCxCJnE,IAAOC,IAAV,MAAf,IACMmE,GAAMpE,IAAOC,IAAV,MA0BMoE,OArBf,WACE,OACE,oCACE,kBAACD,GAAD,KACE,kBAAC,EAAD,CAASrD,KAAMA,MAEjB,kBAACqD,GAAD,KACE,kBAAC,EAAD,CAAYjC,MAAM,eAAef,MAAOkD,MAE1C,kBAACF,GAAD,KACE,kBAAC,GAAD,KACE,kBAACG,GAAD,CAAgB3B,QAASA,OAG7B,kBAACwB,GAAD,KACE,kBAAC,GAAD,CAAoBL,MAAOS,QC7BnCC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.acfebeaa.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes, { number, string } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  color: #24292e;\r\n  background-color: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\nconst Description = styled.div`\r\n  padding: 30px;\r\n`;\r\nconst Avatar = styled.img`\r\n  margin: 0 auto 30px;\r\n  border-radius: 50%;\r\n`;\r\nconst Name = styled.div`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  margin: 0 0 10px;\r\n`;\r\nconst Tag = styled.div`\r\n  margin: 0 0 10px;\r\n  font-weight: 300;\r\n`;\r\nconst Location = styled.div`\r\n  margin: 0;\r\n  font-weight: 300;\r\n`;\r\nconst List = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #eee;\r\n  border-top: 1px solid grey;\r\n`;\r\nconst ListItem = styled.ul`\r\n  padding: 15px 0;\r\n  flex-basis: auto;\r\n  width: 33.333%;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: #ddd;\r\n  }\r\n  &:not(:last-child) {\r\n    border-right: 1px solid grey;\r\n  }\r\n`;\r\nconst ListLabel = styled.span`\r\n  text-align: center;\r\n  display: block;\r\n  font-size: 12px;\r\n`;\r\nconst ListQuantity = styled.span`\r\n  display: block;\r\n  font-size: 16px;\r\n  font-weight: 700;\r\n`;\r\n\r\nfunction Profile({ user }) {\r\n  const { name, tag, location, avatar, stats } = user;\r\n  const { followers, views, likes } = stats;\r\n  return (\r\n    <Container>\r\n      <Description>\r\n        <Avatar src={avatar} alt={name} />\r\n        <Name>{name}</Name>\r\n        <Tag>{tag}</Tag>\r\n        <Location>{location}</Location>\r\n      </Description>\r\n      <List>\r\n        <ListItem>\r\n          <ListLabel>Followers</ListLabel>\r\n          <ListQuantity>{followers}</ListQuantity>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListLabel>Views</ListLabel>\r\n          <ListQuantity>{views}</ListQuantity>\r\n        </ListItem>\r\n        <ListItem>\r\n          <ListLabel>Likes</ListLabel>\r\n          <ListQuantity>{likes}</ListQuantity>\r\n        </ListItem>\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// TODO\r\nProfile.defaultProps = {\r\n  location: 'unknown',\r\n  avatar: 'unknown',\r\n};\r\n\r\nProfile.propTypes = {\r\n  user: PropTypes.exact({\r\n    name: string.isRequired,\r\n    tag: string.isRequired,\r\n    location: string,\r\n    avatar: string,\r\n    stats: PropTypes.exact({\r\n      followers: number.isRequired,\r\n      views: number.isRequired,\r\n      likes: number.isRequired,\r\n    }).isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes, { number, string } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  color: #24292e;\r\n  background-color: #fff;\r\n  border-radius: 6px;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n`;\r\nconst Title = styled.h2`\r\n  font-size: 15px;\r\n  text-transform: uppercase;\r\n  padding: 30px;\r\n  margin: 0;\r\n`;\r\nconst List = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  background-color: #eee;\r\n  border-top: 1px solid grey;\r\n  text-align: center;\r\n`;\r\nconst ListItem = styled.ul`\r\n  padding: 10px 0;\r\n  flex-basis: auto;\r\n  width: 25%;\r\n  color: #fff;\r\n`;\r\nconst ListItemBlue = styled(ListItem)`\r\n  background-color: blue;\r\n`;\r\nconst ListItemPurple = styled(ListItem)`\r\n  background-color: purple;\r\n`;\r\nconst ListItemRed = styled(ListItem)`\r\n  background-color: Red;\r\n`;\r\nconst ListItemGreen = styled(ListItem)`\r\n  background-color: Green;\r\n`;\r\nconst ListLabel = styled.span`\r\n  display: block;\r\n  font-size: 12px;\r\n\r\n  padding-bottom: 10px;\r\n`;\r\nconst ListPercentage = styled.span`\r\n  display: block;\r\n`;\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n\r\n      <List>\r\n        <ListItemBlue>\r\n          <ListLabel>{stats[0].label}</ListLabel>\r\n          <ListPercentage>{stats[0].percentage}%</ListPercentage>\r\n        </ListItemBlue>\r\n        <ListItemPurple>\r\n          <ListLabel>{stats[1].label}</ListLabel>\r\n          <ListPercentage>{stats[1].percentage}%</ListPercentage>\r\n        </ListItemPurple>\r\n        <ListItemRed>\r\n          <ListLabel>{stats[2].label}</ListLabel>\r\n          <ListPercentage>{stats[2].percentage}%</ListPercentage>\r\n        </ListItemRed>\r\n        <ListItemGreen>\r\n          <ListLabel>{stats[3].label}</ListLabel>\r\n          <ListPercentage>{stats[3].percentage}%</ListPercentage>\r\n        </ListItemGreen>\r\n      </List>\r\n    </Container>\r\n  );\r\n}\r\n\r\nStatistics.defaultProps = {\r\n  title: 'STATS',\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: string.isRequired,\r\n      label: string.isRequired,\r\n      percentage: number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\n  display: block;\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  color: #24292e;\r\n  background-color: #fff;\r\n  max-width: 250px;\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nfunction FriendList({ children }) {\r\n  return <List>{children}</List>;\r\n}\r\n\r\nFriendList.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes, { number, string, bool } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst ListItem = styled.li`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  padding: 5px 10px;\r\n  box-shadow: 0 0 3px rgba(0, 0, 0, 0.3);\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\nconst Status = styled.span`\r\n  display: block;\r\n  width: 10px;\r\n  height: 10px;\r\n  background-color: ${props => (props.isOnline ? 'green' : 'red')};\r\n  border-radius: 50%;\r\n  margin-right: 10px;\r\n`;\r\nconst Avatar = styled.img`\r\n  margin-right: 10px;\r\n`;\r\n\r\nfunction FriendList({ friends }) {\r\n  return friends.map(frend => (\r\n    <ListItem key={frend.id}>\r\n      <Status isOnline={frend.isOnline}></Status>\r\n      <Avatar src={frend.avatar} alt={frend.name} width=\"48\" />\r\n      <p>{frend.name}</p>\r\n    </ListItem>\r\n  ));\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      avatar: string.isRequired,\r\n      name: string.isRequired,\r\n      isOnline: bool.isRequired,\r\n      id: number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes, { string } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Table = styled.table`\r\n  font-family: Helvetica, Arial, sans-serif;\r\n  width: 100%;\r\n  max-width: 900px;\r\n  margin: 0 auto;\r\n  min-width: 400px;\r\n  border-spacing: 1px;\r\n  background: #dbdede;\r\n  box-shadow: 0 0 4px rgba(0, 0, 0, 0.3);\r\n`;\r\nconst THead = styled.thead``;\r\nconst TBody = styled.tbody``;\r\nconst TR = styled.tr`\r\n  background-color: #fff;\r\n  :nth-child(2n) {\r\n    background-color: #e2eded;\r\n  }\r\n`;\r\nconst TH = styled.th`\r\n  width: 33.33%;\r\n  background-color: #31cfd9;\r\n  text-align: center;\r\n  padding: 16px;\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n`;\r\nconst TD = styled.td`\r\n  width: 33.33%;\r\n  text-align: center;\r\n  padding: 16px;\r\n`;\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <Table>\r\n      <THead>\r\n        <TR>\r\n          <TH>Type</TH>\r\n          <TH>Amount</TH>\r\n          <TH>Currency</TH>\r\n        </TR>\r\n      </THead>\r\n\r\n      <TBody>\r\n        {items.map(item => (\r\n          <TR key={item.id}>\r\n            <TD>{item.type}</TD>\r\n            <TD>{item.amount}</TD>\r\n            <TD>{item.currency}</TD>\r\n          </TR>\r\n        ))}\r\n      </TBody>\r\n    </Table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: string.isRequired,\r\n      type: string.isRequired,\r\n      amount: string.isRequired,\r\n      currency: string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Profile from '../Profile/Profile.js';\r\nimport Statistics from '../Statistics/Statistics.js';\r\nimport FriendList from '../FriendList/FriendList.js';\r\nimport FriendListItem from '../FriendListItem/FriendListItem.js';\r\nimport TransactionHistory from '../TransactionHistory/TransactionHistory.js';\r\nimport user from '../../data/user.json';\r\nimport statisticalData from '../../data/statistical-data.json';\r\nimport friends from '../../data/friends.json';\r\nimport transactions from '../../data/transactions.json';\r\n\r\nconst Container = styled.div``;\r\nconst Box = styled.div`\r\n  background-color: #f5f5f5;\r\n  padding: 10px;\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Profile user={user} />\r\n      </Box>\r\n      <Box>\r\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      </Box>\r\n      <Box>\r\n        <FriendList>\r\n          <FriendListItem friends={friends} />\r\n        </FriendList>\r\n      </Box>\r\n      <Box>\r\n        <TransactionHistory items={transactions} />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// {\r\n//   \"id\": \"1e0700a2-5183-4291-85cc-2065a036a683\",\r\n//   \"type\": \"invoice\",\r\n//   \"amount\": \"964.82\",\r\n//   \"currency\": \"LRD\"\r\n// },\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}